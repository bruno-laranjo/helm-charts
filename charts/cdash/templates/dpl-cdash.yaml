apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f cdash.yml
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: cdash
  name: cdash
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cdash
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f cdash.yml
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: cdash
    spec:
      containers:
        - env:
            - name: ADMIN_INSTITUTION
              value: {{ .Values.adminInstitution | quote }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.adminPassword }}
            - name: APP_KEY
              value: {{ .Values.applicationKey }}
            - name: APP_URL
              value: {{ .Values.applicationUrl }}
            - name: DB_CONNECTION
              value: {{ .Values.externalDatabase.connection }}
            - name: DB_DATABASE
              value: {{ .Values.externalDatabase.database }}
            - name: DB_HOST
              value: {{ .Values.externalDatabase.host }}
            - name: DB_LOGIN
              value: {{ .Values.externalDatabase.login }}
            - name: DB_PASSWORD
              value: {{ .Values.externalDatabase.password }}
            - name: DB_PORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: MIX_APP_URL
              value: {{ .Values.applicationUrl }}
            - name: QUEUE_CONNECTION
              value: {{ .Values.externalDatabase.host }}
            - name: APP_NAME
              value: CDash
            - name: APP_DEBUG
              value: "false"
            - name: APP_ENV
              value: production

          image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
          livenessProbe:
            exec:
              command:
                - ps aux | grep apache2 | grep -v grep > /dev/null
            failureThreshold: 20
            periodSeconds: 5
            timeoutSeconds: 10
          name: cdash
          ports:
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/cdash
              name: storage
      restartPolicy: Always
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: storage
status: {}
