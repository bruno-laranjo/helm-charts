apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f cdash.yml
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f cdash.yml
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: worker
    spec:
      containers:
        - env:
            - name: APP_DEBUG
              value: "true"
            - name: APP_URL
              value: "{{ .Values.worker.protocol }}://{{ .Values.application.host }}"
            - name: APP_KEY
              value: {{ .Values.application.appkey }}
            - name: DB_CONNECTION
              value: {{ .Values.externalDatabase.connection }}
            - name: DB_DATABASE
              value: {{ .Values.externalDatabase.database }}
            - name: DB_HOST
              value: {{ .Values.externalDatabase.host }}
            - name: DB_USERNAME
              value: {{ .Values.externalDatabase.username }}
            - name: DB_PASSWORD
              value: {{ .Values.externalDatabase.password }}
            - name: DB_PORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: QUEUE_CONNECTION
              value: {{ .Values.worker.connection }}
            - name: REMOTE_WORKERS
              value: {{ .Values.worker.remote | quote }}
            - name: FILESYSTEM_DRIVER
              value: local
          image: "{{ .Values.image.repository }}-worker:{{ .Values.image.version }}"
          name: cdash-worker
          resources: {}
          volumeMounts:
            - name: cdash-my-cert-pem
              mountPath: "/var/www/my-cert.pem"
              subPath: my-cert.pem
              readOnly: false
            - name: cdash-my-cert-key
              mountPath: "/var/www/my-cert.key"
              subPath: my-cert.key
              readOnly: false
            - mountPath: /var/lib/cdash
              name: cdashdata
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "php artisan storage:mkdirs"]
      restartPolicy: Always
      volumes:
        - name: cdashdata
          persistentVolumeClaim:
            claimName: cdashdata
        - name: cdash-my-cert-pem
          configMap:
            name: my-cert.pem
        - name: cdash-my-cert-key
          configMap:
            name: my-cert.key

status: {}
